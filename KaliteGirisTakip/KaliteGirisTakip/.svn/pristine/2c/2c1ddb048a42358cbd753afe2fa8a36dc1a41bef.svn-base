
using KaliteGiris.Bll;
using KaliteGiris.Entities;
using KaliteGiris.Entities.Enums;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Lab.WinForms
{
    public partial class frmLab : Form
    {
        private LabTalepManager LabTalepManager { get; set; }
        private FirmaManager FirmaManager { get; set; }
        private PersonelManager PersonelManager { get; set; }
        private DurumManager DurumManager { get; set; }
        private List<LabTalep> listLab { get; set; }
        private List<Firma> listFirma { get; set; }
        private List<Personel> listPersonel { get; set; }
        private List<Durum> listDurum { get; set; }


        public frmLab()
        {
            InitializeComponent();
            LabTalepManager = new LabTalepManager();
            FirmaManager =new FirmaManager();
            PersonelManager = new PersonelManager();
            DurumManager = new DurumManager();
        }
        private void frmLab_Load(object sender, EventArgs e)
        {
            LabListGetir();
            FirmaGetir();
            PersonelGetir();            
            DurumGetir();
            SonucGetir();            
        }

        private void SonucGetir()
        {
            listDurum = DurumManager.DurumListele();
            //var listFiltered = listDurum.Where(i => i.DurumTipiId == LabEnum.LabDurum);
            var selected = listDurum.Select(x => new { x.DurumId, x.DurumTipiId, x.DurumAdi }).Where(i => i.DurumTipiId == LabEnum.LabSonuc);
            bsDurum.DataSource = selected;
            txtLabSonucu.Properties.ValueMember = "DurumId";
            txtLabSonucu.Properties.DisplayMember = "DurumAdi";
            txtLabSonucu.Properties.PopulateColumns();
            txtLabSonucu.Properties.Columns["DurumTipiId"].Visible = false;
            txtLabSonucu.Properties.Columns["DurumId"].Visible = false;
        }

        private void DurumGetir()
        {
            listDurum = DurumManager.DurumListele();
            //var listFiltered = listDurum.Where(i => i.DurumTipiId == LabEnum.LabDurum);
            var selected = listDurum.Select(x => new { x.DurumId,x.DurumTipiId, x.DurumAdi }).Where(i => i.DurumTipiId == LabEnum.LabDurum);
            bsDurum.DataSource = selected;
            txtLabDurumu.Properties.ValueMember = "DurumId";
            txtLabDurumu.Properties.DisplayMember = "DurumAdi";
            txtLabDurumu.Properties.PopulateColumns();
            txtLabDurumu.Properties.Columns["DurumTipiId"].Visible = false;
            txtLabDurumu.Properties.Columns["DurumId"].Visible = false;
        }
        private void PersonelGetir()
        {
            listPersonel = PersonelManager.PersonelListele();
            var selected = listPersonel.Select(x => new { x.PersonelId, x.Adi });
            bsPersonel.DataSource = selected;
            txtGKKSorumlusu.Properties.ValueMember = "PersonelId";
            txtGKKSorumlusu.Properties.DisplayMember = "Adi";
            txtGKKSorumlusu.Properties.PopulateColumns();
            txtGKKSorumlusu.Properties.Columns["PersonelId"].Visible = false;

        }
        private void FirmaGetir()
        {            
            listFirma = FirmaManager.FirmaListele();
            var selected = listFirma.Select(x => new { x.FirmaId, x.FirmaAdi });
            bsFirma.DataSource = selected;
            txtFirmaAdi.Properties.ValueMember = "FirmaId";
            txtFirmaAdi.Properties.DisplayMember = "FirmaAdi";
            txtFirmaAdi.Properties.PopulateColumns();
            txtFirmaAdi.Properties.Columns["FirmaId"].Visible = false;
            //txtFirmaAdi.Properties.Columns["Durum"].Visible = false;
        }
        private void LabListGetir()
        {
            listLab = LabTalepManager.LabTalepListele();
            labTalepBindingSource.DataSource = listLab;
            gcLab.DataSource = labTalepBindingSource;
        }
        private void btnYeni_Click(object sender, EventArgs e)
        {
            TextleriTemizle();
        }
        private void TextleriTemizle()
        {
            txtTarih.Text = "";
            txtRaporTarihi.Text = "";
            Sira.Text = "";                 
            txtFirmaAdi.Text = "";
            txtSözlesmeNo.Text = "";
            txtAlimTipi.Text = "";
            txtMalzeme.Text = "";
            txtIrsaliyeNo.Text = "";
            txtGKKSorumlusu.Text = "";
            txtLabDurumu.Text = "";
            txtLabSonucu.Text = "";
            txtGKKSonucu.Text = "";            
            txtAciklama.Text = "";
            
            txtTarih.Focus();
        }
        private void btnKaydet_Click(object sender, EventArgs e)
        {
            KayıtEkle();
            
        }
        private void KayıtEkle()
        {
            bool boscheck = ValidationControlExtendClass.BosAlanKontrol(btnKaydet, txtFirmaAdi, txtIrsaliyeNo, txtSözlesmeNo, txtGKKSorumlusu);
            if (boscheck)
            {
                LabTalep lapTalep = new LabTalep();
                
                lapTalep.Sira = 4;
                lapTalep.Tarih = DateTime.Now;
                lapTalep.RaporTarihi = DateTime.Now;
                lapTalep.FirmaId = new Guid((txtFirmaAdi.EditValue.ToString()));
                lapTalep.SozlesmeNo = txtSözlesmeNo.Text;
                lapTalep.AlimTipi = txtAlimTipi.Text;
                lapTalep.Malzeme = txtMalzeme.Text;
                lapTalep.IrsaliyeNo = txtIrsaliyeNo.Text;
                lapTalep.PersonelId = new Guid((txtGKKSorumlusu.EditValue.ToString()));
                lapTalep.DurumId = new Guid((txtLabDurumu.EditValue.ToString()));
                lapTalep.Aciklama = txtAciklama.Text;

                LabTalepManager.LabTalepEkle(lapTalep);
            }
            
        }
        private void btnSil_Click(object sender, EventArgs e)
        {
            KayıtSil();
        }
        private void KayıtSil()
        {
            LabTalep lapTalep = new LabTalep();

            lapTalep.LabTalepId = new Guid("22f2f017-ad90-e811-8e17-001cc0c1464b");

            LabTalepManager.LabTalepSil(lapTalep);
        }
        private void btnGuncelle_Click(object sender, EventArgs e)
        {
            KayıtGuncelle();
        }
        private void KayıtGuncelle()
        {
            LabTalep lapTalep = new LabTalep();
            //
            lapTalep.LabTalepId = new Guid("f712f7e1-ac90-e811-8e17-001cc0c1464b");

            lapTalep.Sira = 3;
            lapTalep.Tarih = new DateTime(2017, 7, 30);
            lapTalep.RaporTarihi = DateTime.Now;
            //lapTalep.FirmaId = new Guid(Convert.ToInt32(txtFirmaAdi.EditValue));
            lapTalep.SozlesmeNo = txtSözlesmeNo.Text;
            lapTalep.AlimTipi = txtAlimTipi.Text;
            lapTalep.Malzeme = txtMalzeme.Text;
            lapTalep.IrsaliyeNo = txtIrsaliyeNo.Text;
            lapTalep.PersonelId = new Guid("2ad07945-e593-e811-8ee1-408d5ca6bf05");
            lapTalep.DurumId = new Guid("d0010e44-4f95-e811-8ee1-408d5ca6bf05");
            lapTalep.Aciklama = txtAciklama.Text;

            LabTalepManager.LabTalepGuncelle(lapTalep);
        }
    }
}
