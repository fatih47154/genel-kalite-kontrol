using KaliteGiris.IEfDal;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using KaliteGiris.Entities;

namespace KaliteGiris.EfDal
{
    public class DurumEf : IDurumEf
    {
        Durum Durum { get; set; }
       
        public int DurumEkle(Durum Durum)
        {
            int sonuc = 0;
            try
            {
                LabDataModel dataModel = new LabDataModel();
                dataModel.Durum.Add(Durum);
                sonuc = dataModel.SaveChanges();
            }
            catch (Exception ex)
            {
            }
            return sonuc;
        }

        public int DurumGuncelle(Durum Durum)
        {
            int sonuc = 0;
            Guid id = Durum.DurumId;
    
            try
            {
                LabDataModel dataModel = new LabDataModel();
                
                if (dataModel.Durum.Find(id) != null)
                {
                    dataModel.Entry(Durum).CurrentValues.SetValues(Durum);
                    sonuc = dataModel.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                //  Log4NetLibrary.HataDataBaseLog.LogStart.Error(Log4NetLibrary.GetMethodProperties.GetMethodFullName(), ex);
            }

            return sonuc;
        }

        public List<Durum> DurumListele()
        {
            List<Durum> DurumList = new List<Durum>();
                        
            try
            {
                LabDataModel dataModel = new LabDataModel();
                
                DurumList = dataModel.Durum.ToList();
                var result = DurumList.Where(e => e.DurumId != null).ToList();
                DurumList = result;
                
            }
            catch (Exception ex)
            {

                //Log4NetLibrary.HataDataBaseLog.LogStart.Error(Log4NetLibrary.GetMethodProperties.GetMethodFullName(), ex);
            }
            return DurumList;
        }
    }
}
